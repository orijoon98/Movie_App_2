{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/orijoon98/Desktop/movie_app/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoading ? \"Loading...\" : \"We are ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/orijoon98/Desktop/movie_app/src/App.js"],"names":["React","axios","App","Component","state","isLoading","movies","getMovies","data","get","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAM/BC,SAN+B,GAMnB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAACF,YAAAA;AAAD;AAAR;AAAP,UAA4B,MAAML,KAAK,CAACQ,GAAN,CAAU,2CAAV,CAAxC;AAED,KAT8B;AAAA;;AAW/BC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,SAAL;AACD;;AAEDI,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEN,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACA;AAAA,gBACGC,SAAS,GAAG,YAAH,GAAkB;AAD9B;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AAtB8B;;AAyBjC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {data: { data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n  \n  render(){\n    const { isLoading } = this.state;\n    return (\n    <div>\n      {isLoading ? \"Loading...\" : \"We are ready\"}\n    </div>\n  );\n  }\n}\n\nexport default App;\n "]},"metadata":{},"sourceType":"module"}